// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bitzen.Data;

namespace bitzen.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200824202602_Preenche-Banco")]
    partial class PreencheBanco
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("bitzen.Models.Abastecimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAbastecimento");

                    b.Property<string>("IdUser");

                    b.Property<int>("Km");

                    b.Property<decimal>("Litros");

                    b.Property<string>("Posto")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<decimal>("Valor");

                    b.Property<int>("VeiculoId");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Abastecimentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataAbastecimento = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 2,
                            DataAbastecimento = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 100m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 100m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 3,
                            DataAbastecimento = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 150m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 150m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 4,
                            DataAbastecimento = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 5,
                            DataAbastecimento = new DateTime(2020, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 6,
                            DataAbastecimento = new DateTime(2020, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 7,
                            DataAbastecimento = new DateTime(2020, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 8,
                            DataAbastecimento = new DateTime(2020, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 9,
                            DataAbastecimento = new DateTime(2020, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 10,
                            DataAbastecimento = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 11,
                            DataAbastecimento = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 12,
                            DataAbastecimento = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 13,
                            DataAbastecimento = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 14,
                            DataAbastecimento = new DateTime(2020, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 15,
                            DataAbastecimento = new DateTime(2020, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 16,
                            DataAbastecimento = new DateTime(2020, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 17,
                            DataAbastecimento = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 18,
                            DataAbastecimento = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 19,
                            DataAbastecimento = new DateTime(2020, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 20,
                            DataAbastecimento = new DateTime(2020, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 21,
                            DataAbastecimento = new DateTime(2020, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 22,
                            DataAbastecimento = new DateTime(2020, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 23,
                            DataAbastecimento = new DateTime(2020, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 24,
                            DataAbastecimento = new DateTime(2020, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 25,
                            DataAbastecimento = new DateTime(2020, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 26,
                            DataAbastecimento = new DateTime(2020, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 27,
                            DataAbastecimento = new DateTime(2020, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 28,
                            DataAbastecimento = new DateTime(2020, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 29,
                            DataAbastecimento = new DateTime(2020, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 30,
                            DataAbastecimento = new DateTime(2020, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 31,
                            DataAbastecimento = new DateTime(2020, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 32,
                            DataAbastecimento = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 33,
                            DataAbastecimento = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 34,
                            DataAbastecimento = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 35,
                            DataAbastecimento = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "luizchequini@gmail.com",
                            Km = 100,
                            Litros = 10m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 10m,
                            VeiculoId = 1
                        },
                        new
                        {
                            Id = 36,
                            DataAbastecimento = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "joaoantonio@gmail.com",
                            Km = 100,
                            Litros = 200m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 830m,
                            VeiculoId = 2
                        },
                        new
                        {
                            Id = 37,
                            DataAbastecimento = new DateTime(2020, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "joaoantonio@gmail.com",
                            Km = 100,
                            Litros = 1000m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 35m,
                            VeiculoId = 2
                        },
                        new
                        {
                            Id = 38,
                            DataAbastecimento = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "joaoantonio@gmail.com",
                            Km = 100,
                            Litros = 90m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 88m,
                            VeiculoId = 2
                        },
                        new
                        {
                            Id = 39,
                            DataAbastecimento = new DateTime(2020, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "joaoantonio@gmail.com",
                            Km = 500,
                            Litros = 50m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 90m,
                            VeiculoId = 2
                        },
                        new
                        {
                            Id = 40,
                            DataAbastecimento = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "joaoantonio@gmail.com",
                            Km = 900,
                            Litros = 100m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 190m,
                            VeiculoId = 2
                        },
                        new
                        {
                            Id = 41,
                            DataAbastecimento = new DateTime(2020, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "joaoantonio@gmail.com",
                            Km = 1000,
                            Litros = 139m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 290m,
                            VeiculoId = 2
                        },
                        new
                        {
                            Id = 42,
                            DataAbastecimento = new DateTime(2020, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "joaoantonio@gmail.com",
                            Km = 1100,
                            Litros = 100m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 490m,
                            VeiculoId = 2
                        },
                        new
                        {
                            Id = 43,
                            DataAbastecimento = new DateTime(2020, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "joaoantonio@gmail.com",
                            Km = 600,
                            Litros = 200m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 290m,
                            VeiculoId = 2
                        },
                        new
                        {
                            Id = 44,
                            DataAbastecimento = new DateTime(2020, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "joaoantonio@gmail.com",
                            Km = 300,
                            Litros = 230m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 590m,
                            VeiculoId = 2
                        },
                        new
                        {
                            Id = 45,
                            DataAbastecimento = new DateTime(2020, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "joaoantonio@gmail.com",
                            Km = 300,
                            Litros = 430m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 790m,
                            VeiculoId = 2
                        },
                        new
                        {
                            Id = 46,
                            DataAbastecimento = new DateTime(2020, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "joaoantonio@gmail.com",
                            Km = 300,
                            Litros = 130m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 590m,
                            VeiculoId = 2
                        },
                        new
                        {
                            Id = 47,
                            DataAbastecimento = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUser = "joaoantonio@gmail.com",
                            Km = 300,
                            Litros = 1230m,
                            Posto = "Posto do Chimbica",
                            Tipo = "Gasolina",
                            Valor = 1590m,
                            VeiculoId = 2
                        });
                });

            modelBuilder.Entity("bitzen.Models.CamposUsuario", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NomeCompleto");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("bitzen.Models.Veiculo", b =>
                {
                    b.Property<int>("VeiculoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ano");

                    b.Property<string>("IdUser");

                    b.Property<string>("Imagem");

                    b.Property<int>("Km");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("TipoCombustivel")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("TipoVeiculo")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("VeiculoId");

                    b.ToTable("Veiculos");

                    b.HasData(
                        new
                        {
                            VeiculoId = 1,
                            Ano = 2020,
                            IdUser = "luizchequini@gmail.com",
                            Imagem = "\\Uploads\\Imagens\\\\b48951a3-d607-441e-a7b6-020f93d099ba.jpg",
                            Km = 100,
                            Marca = "Volkswagem",
                            Modelo = "Fusca",
                            Placa = "XXX-1234",
                            TipoCombustivel = "Gasolina",
                            TipoVeiculo = "Passeio"
                        },
                        new
                        {
                            VeiculoId = 2,
                            Ano = 2020,
                            IdUser = "joaoantonio@gmail.com",
                            Imagem = "\\Uploads\\Imagens\\\\b48951a3-d607-441e-a7b6-020f93d099ba.jpg",
                            Km = 10,
                            Marca = "Honda",
                            Modelo = "Civic",
                            Placa = "CDE-4568",
                            TipoCombustivel = "Alcool",
                            TipoVeiculo = "Passeio"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("bitzen.Models.CamposUsuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("bitzen.Models.CamposUsuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("bitzen.Models.CamposUsuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("bitzen.Models.CamposUsuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("bitzen.Models.Abastecimento", b =>
                {
                    b.HasOne("bitzen.Models.Veiculo", "Veiculo")
                        .WithMany("Abastecimento")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
